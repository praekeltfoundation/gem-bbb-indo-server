# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-11 11:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.wagtailcore.fields


class Migration(migrations.Migration):

    replaces = [('content', '0003_tag_tip'), ('content', '0004_auto_20161011_1002'), ('content', '0005_remove_tag'), ('content', '0006_auto_20161011_1314')]

    dependencies = [
        ('wagtailimages', '0013_make_rendition_upload_callable'),
        ('taggit', '0002_auto_20150616_2121'),
        ('content', '0002_questionoption_next_question'),
        ('wagtailcore', '0029_unicode_slugfield_dj19'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tip',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('cover_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name_plural': 'Tips',
                'verbose_name': 'Tip',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TipTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_tiptag_items', to='taggit.Tag')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_item', to='content.Tip')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tip',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='content.TipTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
